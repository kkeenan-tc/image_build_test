name: Bump Version

on:
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  version_bump:
    env:
      minor_inc: ${{ contains(github.event.pull_request.title, '[minor]') && 1 || 0 }}
      major_inc: ${{ contains(github.event.pull_request.title, '[major]') && 1 || 0 }}
      patch_inc: ${{ !contains(github.event.pull_request.title, '[minor]') && !contains(github.event.pull_request.title, '[major]') && 1 || 0 }}
      keep_version: ${{ contains(github.event.pull_request.title, '[keep_version]') && 1 || 0 }}
      patch_keep: ${{ !contains(github.event.pull_request.title, '[major]') && !contains(github.event.pull_request.title, '[minor]') && 1 || 0 }}
      minor_keep: ${{ !contains(github.event.pull_request.title, '[major]') && 1 || 0 }}
      hotfix: ${{ contains(github.event.pull_request.title, '[hotfix]') && 1 || 0 }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - name: Bump Version
        id: bumpver
        run: |
          cd ${GITHUB_WORKSPACE}
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config user.name "${GITHUB_ACTOR}"
          if git diff --name-only origin/main | grep -q version.py; then echo "version.py already changed. Not bumping version."; exit 0; fi
          if [ ${{env.keep_version}} -eq 1 ]; then echo "Version kept. No version bump"; exit 0; fi
          if [ ${{env.major_inc}} -eq 0 ] && [ ${{env.minor_inc}} -eq 0 ] && [ ${{env.patch_inc}} -eq 0 ]; then echo "No version bump"; exit 0; fi
          if [ ! -f version.py ]; then echo "version.py not found"; exit 0; fi
          if [ ${{env.hotfix}} -eq 1 ]; then HOTFIX="-hotfix"; fi
          NEW_VERSION=$(cat version.py | awk -F- '{ print $1 }' | awk -F'"' '{ print $2 }' | awk -v hotfix="$HOTFIX" -F. '{ major=$1; minor=$2; patch=$3; major += ${{env.major_inc}}; minor += ${{env.minor_inc}}; patch += ${{env.patch_inc}}; minor *= ${{env.minor_keep}}; patch *= ${{env.patch_keep}}; printf("__version__ = \"%d.%d.%d%s\"\n", major, minor, patch, hotfix); }')
          echo $NEW_VERSION > version.py
          echo "docker_tag=$NEW_VERSION" >> $GITHUB_OUTPUT
          git add version.py
          git commit -m "[version bumped to ${NEW_VERSION}]"
          git push origin ${{github.event.pull_request.head.ref}}

      # https://github.com/marketplace/actions/push-to-ghcr
      - name: Build and publish a Docker image for ${{ github.repository }}
        uses: macbre/push-to-ghcr@master
        env:
            docker_tag: ${{ steps.bumpver.outputs.docker_tag }}
        with:
          image_name: ${{ github.repository }}  # it will be lowercased internally
          github_token: ${{ secrets.GITHUB_TOKEN }}
          image_tag: $docker_tag